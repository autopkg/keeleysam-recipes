<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
<dict>
	<key>Description</key>
	<string>Downloads the latest version of Duo Desktop and imports into Munki.

Set the DERIVE_MIN_OS variable to a non-empty string to set the minimum_os_version via MunkiInstallsItemsCreator. This requires a minimum AutoPkg version of 2.7 please update if you're not already running it.</string>
	<key>Identifier</key>
	<string>com.keeleysam.recipes.munki.DuoDesktop</string>
	<key>Input</key>
	<dict>
		<key>DERIVE_MIN_OS</key>
		<string>YES</string>
		<key>MUNKI_REPO_SUBDIR</key>
		<string>apps/%NAME%</string>
		<key>NAME</key>
		<string>Duo Desktop</string>
		<key>pkginfo</key>
		<dict>
			<key>catalogs</key>
			<array>
				<string>production</string>
			</array>
			<key>developer</key>
			<string>Duo Security, Inc.</string>
			<key>display_name</key>
			<string>Duo Desktop</string>
			<key>name</key>
			<string>%NAME%</string>
			<key>preinstall_script</key>
			<string>#!/bin/bash

# If running macOS 11+ then write out this file to allow installation to proceed.
# Needs MDM to deliver a cert profile, as per: https://duo.com/docs/device-health
#
# Get darwin version, pinched, with &lt;33 from: https://stackoverflow.com/a/39499208
# Arguably a cleaner way to detect OS.

CREATEDEVICEHEALTHDIRECTORY="/Library/Application Support/Duo/Duo Device Health"
DISABLECERT="/Library/Application Support/Duo/Duo Device Health/DisableMacOS11CertManagement"

if [[ ${OSTYPE:6} -ge 21 ]]
then
	/bin/mkdir -p "$CREATEDEVICEHEALTHDIRECTORY"
	/usr/bin/touch "$DISABLECERT"
fi</string>
			<key>unattended_install</key>
			<true/>
		</dict>
	</dict>
	<key>MinimumVersion</key>
	<string>2.7</string>
	<key>ParentRecipe</key>
	<string>com.keeleysam.recipes.download.DuoDesktop</string>
	<key>Process</key>
	<array>
		<dict>
			<key>Arguments</key>
			<dict>
				<key>destination_path</key>
				<string>%RECIPE_CACHE_DIR%/unpacked</string>
				<key>flat_pkg_path</key>
				<string>%pathname%</string>
				<key>purge_destination</key>
				<true/>
			</dict>
			<key>Processor</key>
			<string>FlatPkgUnpacker</string>
		</dict>
		<dict>
			<key>Arguments</key>
			<dict>
				<key>destination_path</key>
				<string>%RECIPE_CACHE_DIR%/Applications</string>
				<key>pkg_payload_path</key>
				<string>%RECIPE_CACHE_DIR%/unpacked/DuoDesktop.pkg/Payload</string>
				<key>purge_destination</key>
				<true/>
			</dict>
			<key>Processor</key>
			<string>PkgPayloadUnpacker</string>
		</dict>
		<dict>
			<key>Arguments</key>
			<dict>
				<key>faux_root</key>
				<string>%RECIPE_CACHE_DIR%</string>
				<key>installs_item_paths</key>
				<array>
					<string>/Applications/%NAME%.app</string>
				</array>
				<key>derive_minimum_os_version</key>
				<string>%DERIVE_MIN_OS%</string>
			</dict>
			<key>Processor</key>
			<string>MunkiInstallsItemsCreator</string>
		</dict>
		<dict>
			<key>Processor</key>
			<string>MunkiPkginfoMerger</string>
		</dict>
		<dict>
			<key>Arguments</key>
			<dict>
				<key>pkg_path</key>
				<string>%pathname%</string>
				<key>repo_subdirectory</key>
				<string>%MUNKI_REPO_SUBDIR%</string>
			</dict>
			<key>Processor</key>
			<string>MunkiImporter</string>
		</dict>
		<dict>
			<key>Arguments</key>
			<dict>
				<key>path_list</key>
				<array>
					<string>%RECIPE_CACHE_DIR%/unpacked</string>
					<string>%RECIPE_CACHE_DIR%/Applications</string>
				</array>
			</dict>
			<key>Processor</key>
			<string>PathDeleter</string>
		</dict>
	</array>
</dict>
</plist>
